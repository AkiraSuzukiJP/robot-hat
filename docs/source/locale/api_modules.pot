# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-15 15:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../api_modules.rst:2
msgid "module ``modules``"
msgstr ""

#: ../api_modules.rst:7
msgid "class ``Ultrasonic``"
msgstr ""

#: ../api_modules.rst:9
#: ../api_modules.rst:32
#: ../api_modules.rst:66
#: ../api_modules.rst:96
#: ../api_modules.rst:206
msgid "**Example**"
msgstr ""

#: ../api_modules.rst:23
#: ../api_modules.rst:56
#: ../api_modules.rst:87
#: ../api_modules.rst:196
#: ../api_modules.rst:232
msgid "**API**"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic:1
msgid "UltraSonic modules"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:1
msgid "Initialize the ultrasonic class"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.freq:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.color:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:0
msgid "Parameters"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:3
msgid "trig pin"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:5
msgid "echo pin"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:7
msgid "timeout in seconds"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.freq:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:0
msgid "Raises"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.__init__:9
msgid "if trig or echo is not a Pin object"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:1
msgid "Read distance in cm"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:3
msgid "times try to read"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:0
msgid "Returns"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:5
msgid "distance in cm, -1 if timeout"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:0
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Ultrasonic.read:0
msgid "Return type"
msgstr ""

#: ../api_modules.rst:30
msgid "class ``ADXL345``"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345:1
msgid "Bases: :py:class:`~robot_hat.i2c.I2C`"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345:1
msgid "ADXL345 modules"
msgstr ""

#: ../docstring of robot_hat.ADXL345.X:1
msgid "X"
msgstr ""

#: ../docstring of robot_hat.ADXL345.Y:1
msgid "Y"
msgstr ""

#: ../docstring of robot_hat.ADXL345.Z:1
msgid "Z"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.__init__:1
msgid "Initialize ADXL345"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.__init__:3
msgid "address of the ADXL345"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:1
msgid "Read an axis from ADXL345"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:3
msgid "read value(g) of an axis, ADXL345.X, ADXL345.Y or ADXL345.Z, None for all axis"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.ADXL345.read:5
msgid "value of the axis, or list of all axis"
msgstr ""

#: ../api_modules.rst:64
msgid "class ``RGB_LED``"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED:1
msgid "Simple 3 pin RGB LED"
msgstr ""

#: ../docstring of robot_hat.RGB_LED.ANODE:1
msgid "Common anode"
msgstr ""

#: ../docstring of robot_hat.RGB_LED.CATHODE:1
msgid "Common cathode"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:1
msgid "Initialize RGB LED"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:3
msgid "PWM object for red"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:5
msgid "PWM object for green"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:7
msgid "PWM object for blue"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:9
msgid "RGB_LED.ANODE or RGB_LED.CATHODE, default is ANODE"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:11
msgid "if common is not ANODE or CATHODE"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.__init__:12
msgid "if r_pin, g_pin or b_pin is not PWM object"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.color:1
msgid "Write color to RGB LED"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.RGB_LED.color:3
msgid "color to write, hex string starts with \"#\", 24-bit int or tuple of (red, green, blue)"
msgstr ""

#: ../api_modules.rst:94
msgid "class ``Buzzer``"
msgstr ""

#: ../api_modules.rst:98
msgid "Imports and initialize"
msgstr ""

#: ../api_modules.rst:119
msgid "Active buzzer beeping"
msgstr ""

#: ../api_modules.rst:129
msgid "Passive buzzer Simple usage"
msgstr ""

#: ../api_modules.rst:141
msgid "Passive buzzer Manual control"
msgstr ""

#: ../api_modules.rst:157
msgid "Play a song! Baby shark!"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.__init__:1
msgid "Initialize buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.__init__:3
msgid "PWM object for passive buzzer or Pin object for active buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.on:1
msgid "Turn on buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.off:1
msgid "Turn off buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.freq:1
msgid "Set frequency of passive buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.freq:3
msgid "frequency of buzzer, use Music.NOTES to get frequency of note"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.freq:5
#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:7
msgid "if set to active buzzer"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:1
msgid "Play freq"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:3
msgid "freq to play, you can use Music.note() to get frequency of note"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Buzzer.play:5
msgid "duration of each note, in seconds, None means play continuously"
msgstr ""

#: ../api_modules.rst:204
msgid "class ``Grayscale_Module``"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module:1
msgid "3 channel Grayscale Module"
msgstr ""

#: ../docstring of robot_hat.Grayscale_Module.LEFT:1
msgid "Left Channel"
msgstr ""

#: ../docstring of robot_hat.Grayscale_Module.MIDDLE:1
msgid "Middle Channel"
msgstr ""

#: ../docstring of robot_hat.Grayscale_Module.RIGHT:1
msgid "Right Channel"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:1
msgid "Initialize Grayscale Module"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:3
msgid "ADC object or int for channel 0"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:5
msgid "ADC object or int for channel 1"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:7
msgid "ADC object or int for channel 2"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.__init__:9
msgid "reference voltage"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:1
msgid "Get Set reference value"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:3
msgid "reference value, None to get reference value"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.reference:5
msgid "reference value"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:1
msgid "Read line status"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:3
msgid "list of grayscale datas, if None, read from sensor"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read_status:5
msgid "list of line status, 0 for white, 1 for black"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:1
msgid "read a channel or all datas"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:3
msgid "channel to read, leave empty to read all. 0, 1, 2 or Grayscale_Module.LEFT, Grayscale_Module.CENTER, Grayscale_Module.RIGHT"
msgstr ""

#: ../../../robot_hat/modules.py:docstring of robot_hat.modules.Grayscale_Module.read:5
msgid "list of grayscale data"
msgstr ""

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-15 15:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../api_motor.rst:4
msgid "module ``motor``"
msgstr ""

#: ../api_motor.rst:7
msgid "class ``Motors``"
msgstr ""

#: ../api_motor.rst:9
#: ../api_motor.rst:81
msgid "**Example**"
msgstr ""

#: ../api_motor.rst:11
msgid "Initilize"
msgstr ""

#: ../api_motor.rst:21
msgid "Directly control a motor. Motor 1/2 is according to PCB mark"
msgstr ""

#: ../api_motor.rst:32
msgid "Setup for high level control, high level control provides functions from simple forword, backward, left, right, stop to more complex like joystick control, motor directions calibration, etc."
msgstr ""

#: ../api_motor.rst:37
msgid "All these setup only need to run once, and will save in a config file. Next time you load Motors class, it will load from config file."
msgstr ""

#: ../api_motor.rst:53
msgid "Now control the robot"
msgstr ""

#: ../api_motor.rst:69
#: ../api_motor.rst:99
msgid "**API**"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors:1
msgid "Bases: :py:class:`~robot_hat.basic._Basic_class`"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.__init__:1
msgid "Initialize motors with robot_hat.motor.Motor"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.__init__:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.set_is_reverse:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.speed:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.__init__:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.backward:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.forward:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_id:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_id:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.speed:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_left:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_right:0
msgid "Parameters"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.__init__:3
msgid "config file path"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.__getitem__:1
msgid "Get specific motor"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.stop:1
msgid "Stop all motors"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.Motors.left:1
msgid "left motor"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.Motors.right:1
msgid "right motor"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_id:1
msgid "Set left motor id, this function only need to run once It will save the motor id to config file, and load the motor id when the class is initialized"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_id:5
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_id:5
msgid "motor id (1 or 2)"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_id:1
msgid "Set right motor id, this function only need to run once It will save the motor id to config file, and load the motor id when the class is initialized"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_reverse:1
msgid "Set left motor reverse, this function only need to run once It will save the reversed status to config file, and load the reversed status when the class is initialized"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_reverse:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_reverse:0
msgid "Returns"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_reverse:5
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_reverse:5
msgid "if currently is reversed"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_left_reverse:0
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_reverse:0
msgid "Return type"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.set_right_reverse:1
msgid "Set right motor reverse, this function only need to run once It will save the reversed status to config file, and load the reversed status when the class is initialized"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.speed:1
msgid "Set motor speed"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.speed:3
msgid "left motor speed(-100.0~100.0)"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.speed:5
msgid "right motor speed(-100.0~100.0)"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.forward:1
msgid "Forward"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.speed:3
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.backward:3
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.forward:3
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_left:3
#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_right:3
msgid "Motor speed(-100.0~100.0)"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.backward:1
msgid "Backward"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_left:1
msgid "Left turn"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motors.turn_right:1
msgid "Right turn"
msgstr ""

#: ../api_motor.rst:79
msgid "class ``Motor``"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.__init__:1
msgid "Initialize a motor"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.__init__:3
msgid "Motor speed control pwm pin"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.__init__:5
msgid "Motor direction control pin"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.speed:1
msgid "Get or set motor speed"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.set_is_reverse:1
msgid "Set motor is reversed or not"
msgstr ""

#: ../../../robot_hat/motor.py:docstring of robot_hat.motor.Motor.set_is_reverse:3
msgid "True or False"
msgstr ""
